{"ast":null,"code":"import { ADD_CAMP_FAIL, ADD_CAMP_SUCCESS, DELETE_CAMP_FAIL, DELETE_CAMP_SUCCESS, GET_ALL_CAMPS_FAIL, GET_ALL_CAMPS_SUCCESS, GET_ONE_CAMP_FAIL, GET_ONE_CAMP_SUCCESS, LOADING_CAMPS, UPDATE_CAMP_FAIL, UPDATE_CAMP_SUCCESS } from \"../constants/campConstants\";\nimport axios from \"axios\";\nexport const getALLCamps = () => async dispatch => {\n  dispatch({\n    type: LOADING_CAMPS\n  });\n\n  try {\n    const response = await axios.get(\"http://localhost:5000/Camping\");\n    dispatch({\n      type: GET_ALL_CAMPS_SUCCESS,\n      payload: response.data.allCamp\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_CAMPS_FAIL,\n      payload: error\n    });\n  }\n};\nexport const addCamp = (newCamp, navigate) => async dispatch => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/camping/addCamping\", newCamp, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    dispatch({\n      type: ADD_CAMP_SUCCESS\n    });\n    dispatch(getALLCamps());\n    navigate(\"/Camping\");\n  } catch (error) {\n    console.log(error);\n    alert(error.response.data.msg);\n    dispatch({\n      type: ADD_CAMP_FAIL,\n      payload: error\n    });\n  }\n};\nexport const deleteCamp = id => async dispatch => {\n  try {\n    const response = await axios.delete(`http://localhost:5000/Camping/${id}`);\n    dispatch({\n      type: DELETE_CAMP_SUCCESS\n    });\n    dispatch(getALLCamps());\n  } catch (error) {\n    dispatch({\n      type: DELETE_CAMP_FAIL,\n      payload: error\n    });\n  }\n};\nexport const getOneCamp = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:5000/Camping/${id}`);\n    dispatch({\n      type: GET_ONE_CAMP_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ONE_CAMP_FAIL,\n      payload: error\n    });\n  }\n};\nexport const updateOneCamp = (id, newOne, navigate) => async dispatch => {\n  try {\n    const response = await axios.put(`http://localhost:5000/Camping/${id}`, newOne);\n    dispatch({\n      type: UPDATE_CAMP_SUCCESS\n    });\n    dispatch(getALLCamps());\n    navigate(\"/Camping\");\n  } catch (error) {\n    dispatch({\n      type: UPDATE_CAMP_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["ADD_CAMP_FAIL","ADD_CAMP_SUCCESS","DELETE_CAMP_FAIL","DELETE_CAMP_SUCCESS","GET_ALL_CAMPS_FAIL","GET_ALL_CAMPS_SUCCESS","GET_ONE_CAMP_FAIL","GET_ONE_CAMP_SUCCESS","LOADING_CAMPS","UPDATE_CAMP_FAIL","UPDATE_CAMP_SUCCESS","axios","getALLCamps","dispatch","type","response","get","payload","data","allCamp","error","addCamp","newCamp","navigate","post","headers","Authorization","localStorage","getItem","console","log","alert","msg","deleteCamp","id","delete","getOneCamp","updateOneCamp","newOne","put"],"sources":["E:/Nouveau dossier (2)/SHOP-MERN-main/SHOP-MERN-main/client/src/JS/actions/campActions.js"],"sourcesContent":["import {\r\n    ADD_CAMP_FAIL,\r\n    ADD_CAMP_SUCCESS,\r\n    DELETE_CAMP_FAIL,\r\n    DELETE_CAMP_SUCCESS,\r\n    GET_ALL_CAMPS_FAIL,\r\n    GET_ALL_CAMPS_SUCCESS,\r\n    GET_ONE_CAMP_FAIL,\r\n    GET_ONE_CAMP_SUCCESS,\r\n    LOADING_CAMPS,\r\n    UPDATE_CAMP_FAIL,\r\n    UPDATE_CAMP_SUCCESS,\r\n  } from \"../constants/campConstants\";\r\n  import axios from \"axios\";\r\n  \r\n  export const getALLCamps = () => async (dispatch) => {\r\n    dispatch({ type: LOADING_CAMPS });\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/Camping\");\r\n      dispatch({\r\n        type: GET_ALL_CAMPS_SUCCESS,\r\n        payload: response.data.allCamp,\r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: GET_ALL_CAMPS_FAIL, payload: error });\r\n    }\r\n  };\r\n  \r\n  export const addCamp = (newCamp,navigate) => async (dispatch) => {\r\n      try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/camping/addCamping\",\r\n        newCamp,\r\n        {headers:{Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}\r\n      );\r\n      dispatch({ type: ADD_CAMP_SUCCESS });\r\n      dispatch(getALLCamps())\r\n      navigate(\"/Camping\")\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.msg)\r\n      dispatch({ type: ADD_CAMP_FAIL,payload:error });\r\n    }\r\n  };\r\n  \r\n  export const deleteCamp = (id) => async (dispatch) => {\r\n      try {\r\n        const response = await axios.delete(`http://localhost:5000/Camping/${id}`);\r\n        dispatch({\r\n          type: DELETE_CAMP_SUCCESS,\r\n        });  \r\n        dispatch(getALLCamps())\r\n      } catch (error) {\r\n        dispatch({ type: DELETE_CAMP_FAIL, payload: error });\r\n      }\r\n    };\r\n  \r\n    \r\n  export const getOneCamp = (id) => async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/Camping/${id}`);\r\n      dispatch({\r\n        type: GET_ONE_CAMP_SUCCESS,\r\n        payload: response.data\r\n      }); \r\n    } catch (error) {\r\n      dispatch({ type: GET_ONE_CAMP_FAIL, payload: error });\r\n    }\r\n  };\r\n  export const updateOneCamp = (id, newOne, navigate) => async (dispatch) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/Camping/${id}`, newOne);\r\n      dispatch({\r\n        type: UPDATE_CAMP_SUCCESS,\r\n      });      \r\n      dispatch(getALLCamps())\r\n      navigate(\"/Camping\")\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_CAMP_FAIL, payload: error });\r\n    }\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module"}
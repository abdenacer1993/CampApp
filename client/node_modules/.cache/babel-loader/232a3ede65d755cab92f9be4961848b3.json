{"ast":null,"code":"import { ADD_PRODUCT_FAIL, ADD_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, DELETE_PRODUCT_SUCCESS, GET_ALL_PRODUCTS_FAIL, GET_ALL_PRODUCTS_SUCCESS, GET_ONE_PRODUCT_FAIL, GET_ONE_PRODUCT_SUCCESS, LOADING_PRODUCTS, UPDATE_PRODUCT_FAIL, UPDATE_PRODUCT_SUCCESS } from \"../constants/productActionsTyp\";\nimport axios from \"axios\";\nexport const getALLProducts = () => async dispatch => {\n  dispatch({\n    type: LOADING_PRODUCTS\n  });\n\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\");\n    dispatch({\n      type: GET_ALL_PRODUCTS_SUCCESS,\n      payload: response.data.allProduct\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_PRODUCTS_FAIL,\n      payload: error\n    });\n  }\n};\nexport const addProduct = (newProduct, navigate) => async dispatch => {\n  try {\n    const response = await axios.post(\"http://localhost:5000/products/add\", newProduct, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    });\n    dispatch({\n      type: ADD_PRODUCT_SUCCESS\n    });\n    dispatch(getALLProducts());\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n    alert(error.response.data.msg);\n    dispatch({\n      type: ADD_PRODUCT_FAIL,\n      payload: error\n    });\n  }\n};\nexport const deleteProduct = id => async dispatch => {\n  try {\n    const response = await axios.delete(`http://localhost:5000/products/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS\n    });\n    dispatch(getALLProducts());\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error\n    });\n  }\n};\nexport const getOneProduct = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:5000/products/${id}`);\n    dispatch({\n      type: GET_ONE_PRODUCT_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ONE_PRODUCT_FAIL,\n      payload: error\n    });\n  }\n};\nexport const updateOneProduct = (id, newOne, navigate) => async dispatch => {\n  try {\n    const response = await axios.put(`http://localhost:5000/products/${id}`, newOne);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS\n    });\n    dispatch(getALLProducts());\n    navigate(\"/\");\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"names":["ADD_PRODUCT_FAIL","ADD_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_SUCCESS","GET_ALL_PRODUCTS_FAIL","GET_ALL_PRODUCTS_SUCCESS","GET_ONE_PRODUCT_FAIL","GET_ONE_PRODUCT_SUCCESS","LOADING_PRODUCTS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_SUCCESS","axios","getALLProducts","dispatch","type","response","get","payload","data","allProduct","error","addProduct","newProduct","navigate","post","headers","Authorization","localStorage","getItem","console","log","alert","msg","deleteProduct","id","delete","getOneProduct","updateOneProduct","newOne","put"],"sources":["E:/Nouveau dossier (2)/campnidal/nidhal/client/src/JS/actions/productActions.js"],"sourcesContent":["import {\r\n  ADD_PRODUCT_FAIL,\r\n  ADD_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  GET_ALL_PRODUCTS_FAIL,\r\n  GET_ALL_PRODUCTS_SUCCESS,\r\n  GET_ONE_PRODUCT_FAIL,\r\n  GET_ONE_PRODUCT_SUCCESS,\r\n  LOADING_PRODUCTS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n} from \"../constants/productActionsTyp\";\r\nimport axios from \"axios\";\r\n\r\nexport const getALLProducts = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_PRODUCTS });\r\n  try {\r\n    const response = await axios.get(\"http://localhost:5000/products\");\r\n    dispatch({\r\n      type: GET_ALL_PRODUCTS_SUCCESS,\r\n      payload: response.data.allProduct,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: GET_ALL_PRODUCTS_FAIL, payload: error });\r\n  }\r\n};\r\n\r\nexport const addProduct = (newProduct,navigate) => async (dispatch) => {\r\n    try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/products/add\",\r\n      newProduct,\r\n      {headers:{Authorization:`Bearer ${localStorage.getItem(\"token\")}`}}\r\n    );\r\n    dispatch({ type: ADD_PRODUCT_SUCCESS });\r\n    dispatch(getALLProducts())\r\n    navigate(\"/\")\r\n  } catch (error) {\r\n    console.log(error);\r\n    alert(error.response.data.msg)\r\n    dispatch({ type: ADD_PRODUCT_FAIL,payload:error });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:5000/products/${id}`);\r\n      dispatch({\r\n        type: DELETE_PRODUCT_SUCCESS,\r\n      });  \r\n      dispatch(getALLProducts())\r\n    } catch (error) {\r\n      dispatch({ type: DELETE_PRODUCT_FAIL, payload: error });\r\n    }\r\n  };\r\n\r\n  \r\nexport const getOneProduct = (id) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(`http://localhost:5000/products/${id}`);\r\n    dispatch({\r\n      type: GET_ONE_PRODUCT_SUCCESS,\r\n      payload: response.data\r\n    }); \r\n  } catch (error) {\r\n    dispatch({ type: GET_ONE_PRODUCT_FAIL, payload: error });\r\n  }\r\n};\r\nexport const updateOneProduct = (id, newOne, navigate) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.put(`http://localhost:5000/products/${id}`, newOne);\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n    });      \r\n    dispatch(getALLProducts())\r\n    navigate(\"/\")\r\n  } catch (error) {\r\n    dispatch({ type: UPDATE_PRODUCT_FAIL, payload: error });\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}
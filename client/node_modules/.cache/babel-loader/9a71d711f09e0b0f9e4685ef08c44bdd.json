{"ast":null,"code":"import { ADD_CAMP_FAIL, DELETE_CAMP_FAIL, GET_ALL_CAMPS_FAIL, GET_ALL_CAMPS_SUCCESS, GET_ONE_CAMP_FAIL, GET_ONE_CAMP_SUCCESS, LOADING_CAMPS, UPDATE_CAMP_FAIL } from \"../constants/campConstants\";\nconst initialState = {\n  loading: false,\n  camps: [],\n  errors: null,\n  oneComp: {}\n};\nexport const campReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LOADING_CAMPS:\n      return { ...state,\n        loading: true\n      };\n\n    case GET_ALL_CAMPS_SUCCESS:\n      return { ...state,\n        camps: payload,\n        loading: false\n      };\n\n    case GET_ALL_CAMPS_FAIL:\n      return { ...state,\n        loading: false,\n        errors: payload\n      };\n\n    case ADD_CAMP_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case DELETE_CAMP_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case GET_ONE_CAMP_SUCCESS:\n      return { ...state,\n        one: payload\n      };\n\n    case GET_ONE_CAMP_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    case UPDATE_CAMP_FAIL:\n      return { ...state,\n        errors: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_CAMP_FAIL","DELETE_CAMP_FAIL","GET_ALL_CAMPS_FAIL","GET_ALL_CAMPS_SUCCESS","GET_ONE_CAMP_FAIL","GET_ONE_CAMP_SUCCESS","LOADING_CAMPS","UPDATE_CAMP_FAIL","initialState","loading","camps","errors","oneComp","campReducer","state","type","payload","one"],"sources":["E:/Nouveau dossier (2)/SHOP-MERN-main/SHOP-MERN-main/client/src/JS/reducers/campReducer.js"],"sourcesContent":["import {\r\n    ADD_CAMP_FAIL,\r\n    DELETE_CAMP_FAIL,\r\n    GET_ALL_CAMPS_FAIL,\r\n    GET_ALL_CAMPS_SUCCESS,\r\n    GET_ONE_CAMP_FAIL,\r\n    GET_ONE_CAMP_SUCCESS,\r\n    LOADING_CAMPS,\r\n    UPDATE_CAMP_FAIL,\r\n  } from \"../constants/campConstants\";\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    camps: [],\r\n    errors: null,\r\n    oneComp: {},\r\n  };\r\n  \r\n  export const campReducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case LOADING_CAMPS:\r\n        return { ...state, loading: true };\r\n      case GET_ALL_CAMPS_SUCCESS:\r\n        return { ...state, camps: payload, loading: false };\r\n      case GET_ALL_CAMPS_FAIL:\r\n        return { ...state, loading: false, errors: payload };\r\n      case ADD_CAMP_FAIL:\r\n        return { ...state, errors: payload };\r\n      case DELETE_CAMP_FAIL:\r\n        return { ...state, errors: payload };\r\n      case GET_ONE_CAMP_SUCCESS:\r\n        return { ...state, one: payload };\r\n      case GET_ONE_CAMP_FAIL:\r\n        return { ...state, errors: payload };\r\n      case UPDATE_CAMP_FAIL:\r\n        return { ...state, errors: payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,kBAHJ,EAIIC,qBAJJ,EAKIC,iBALJ,EAMIC,oBANJ,EAOIC,aAPJ,EAQIC,gBARJ,QASS,4BATT;AAWE,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,KAAK,EAAE,EAFY;EAGnBC,MAAM,EAAE,IAHW;EAInBC,OAAO,EAAE;AAJU,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAG,YAA6C;EAAA,IAA5CC,KAA4C,uEAApCN,YAAoC;EAAA,IAAtB;IAAEO,IAAF;IAAQC;EAAR,CAAsB;;EACtE,QAAQD,IAAR;IACE,KAAKT,aAAL;MACE,OAAO,EAAE,GAAGQ,KAAL;QAAYL,OAAO,EAAE;MAArB,CAAP;;IACF,KAAKN,qBAAL;MACE,OAAO,EAAE,GAAGW,KAAL;QAAYJ,KAAK,EAAEM,OAAnB;QAA4BP,OAAO,EAAE;MAArC,CAAP;;IACF,KAAKP,kBAAL;MACE,OAAO,EAAE,GAAGY,KAAL;QAAYL,OAAO,EAAE,KAArB;QAA4BE,MAAM,EAAEK;MAApC,CAAP;;IACF,KAAKhB,aAAL;MACE,OAAO,EAAE,GAAGc,KAAL;QAAYH,MAAM,EAAEK;MAApB,CAAP;;IACF,KAAKf,gBAAL;MACE,OAAO,EAAE,GAAGa,KAAL;QAAYH,MAAM,EAAEK;MAApB,CAAP;;IACF,KAAKX,oBAAL;MACE,OAAO,EAAE,GAAGS,KAAL;QAAYG,GAAG,EAAED;MAAjB,CAAP;;IACF,KAAKZ,iBAAL;MACE,OAAO,EAAE,GAAGU,KAAL;QAAYH,MAAM,EAAEK;MAApB,CAAP;;IACF,KAAKT,gBAAL;MACE,OAAO,EAAE,GAAGO,KAAL;QAAYH,MAAM,EAAEK;MAApB,CAAP;;IACF;MACE,OAAOF,KAAP;EAlBJ;AAoBD,CArBM"},"metadata":{},"sourceType":"module"}